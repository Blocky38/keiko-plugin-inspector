############################################################################################################
#
#    Locale name: Default = English (United States)
#
#    Authors (translators):
#
#        - German Vekhorev (DarksideCode)
#          https://github.com/MeGysssTaa/
#
############################################################################################################
logsCleaner.deleteSuccess=Automatically deleted old log file {0}
logsCleaner.dateErr=Failed to retrieve last modified date/time of log file {0}
startup.classLoaderStats=Loaded \
'{0} = 0 : no | * : {0}' \
'{0} = 1 : class | * : classes' \
(\
'{1} = 0 : no | * : {1}' \
'{1} = 1 : error | * : errors'\
).
startup.jarErr.cantRead=The specified JAR-file cannot be read (no permissions?).
startup.jarErr.isDir=The specified JAR-file is a directory.
startup.jarErr.notExists=The specified JAR-file does not exist.
startup.launchingProxy=Launching Keiko proxy, please wait...
startup.noArgsErr.line1=Please specify the JAR-file for Keiko to proxy.
startup.noArgsErr.line2 = For details, see the installations instructins at:
startup.noArgsErr.line3=https://github.com/MeGysssTaa/keiko-plugin-inspector/wiki/Installation-Instructions
startup.proxyBegin=Beginning proxying {0}
logsCleaner.deleteErr=Failed to delete old log file {0}
pluginsIndex.beginning=Indexing plugins, please wait...
pluginsIndex.invalidPluginYml=Invalid plugin.yml in plugin {0}
pluginsIndex.indexedInfo=Indexed plugin {0} (in file {1}): {2} \
'{2} = 1 : class | * : classes'
pluginsIndex.indexErr=Skipped file {0}. Is this a valid plugin?
pluginsIndex.numPluginsIndexed=Indexed {0} \
'{0} = 1 : plugin | * : plugins'
startup.workDir=Keiko working directory: {0}
staticInspections.err=A \
'{0} = 1 : fatal | * : non-fatal' \
error occurred while inspecting plugin {1} (in file {2})
staticInspections.desc.Static.ForceOp=|        Plugin {0} (in file {1}) is able to give certain players on the server the operator \
status, thus giving them all permissions and letting them do whatever they want without \
any restrictions. If this plugin is not a permissions system plugin, then it is very \
likely that this is a trojan that makes your server absurdly easy to hack.
staticInspections.clean=|    All clean.
staticInspections.suspicious=|    Detected suspicious code.
staticInspections.malicious=|    Detected malicious code.
staticInspections.analysisName=|    Scanner category: {0}
staticInspections.details=|        Details:
pluginsIndex.abortingLine1=Aborting startup: fatal error detected during plugins indexing
pluginsIndex.abortingLine2=A more detailed explanation can be found above.
staticInspections.abortingLine1=Aborting startup: detected at least one malicious plugin, or a plugin that was failed to be scanned.
staticInspections.abortingLine2=A more detailed explanation can be found above.
startup.proxyErr=Failed to launch Keiko proxy.
staticInspections.beginAll=Scanning plugins, please wait...
staticInspections.desc.Static.SystemExit=|        Plugin {0} (in file {1}) is using unsafe program termination code that may lead to unexpected \
problems. For example, the server may be unable to save its current world state in case of such \
a shutdown - it will just crash. Plugins should not normally shut your server down. And even if \
they do, they should use methods built in the Bukkit/Bungee library (API) for that.
staticInspections.desc.Static.SystemProcess=|        Plugin {0} (in file {1}) can use system commands. That is, this plugin can do literally \
whatever it wants with your system (machine), bypassing any Keiko restrictions. Most often, \
plugins do not need to use system commands, since there is a more secure Java API for almost \
any problem. This means there is a high chance that this plugin will is intended to harm your server.
staticInspections.desc.Static.NativesLoader=|        Plugin {0} (in file {1}) links some fishy native code. This means that the plugin is not \
entirely written in Java, and therefore cannot be fully controlled. In other words, \
this plugin can execute potentially malicious code that will not be analyzed by Keiko.
staticInspections.desc.Static.DirectLeaks=|        Plugin {0} (in file {1}) is a pirated copy of a paid plugin. Firstly, this means that it is \
very likely that the plugin is infected. Secondly, this means that the installed version of \
this plugin is out of date, and therefore may contain security vulnerabilities or bugs. By \
using pirated plugins you are putting your server in danger, whereas by purchasing genuine \
software you help its development and get qualified support and updates.
staticInspections.desc.Static.CodeInjection=|        Plugin {0} (in file {1}) seems to be manipulating its own code, or code of other \
plugin on the server, at runtime. It can potentially inject malicious instructions \
in a plugin you trust, or infect your whole server. Using this plugin is extremely \
dangerous.
staticInspections.desc.Static.PermissionsPluginsAbuse=|        Plugin {0} (in file {1}) interacts explicitly with a permissions plugin. It can modify permissions \
and groups of any player on the server. Normally, plugins do not need to even know which \
permissions plugin you are using, because Bukkit/Bungee provides a common interface for \
checking permissions and groups. So this plugin is potentially destructive.
staticInspections.caches.err=Something went wrong with Keiko static inspection caches system.
staticInspections.caches.resultCached=Result of inspection {0} is cached for plugin {1} (in file {2}) (\
'{3} = 0 : no | * : {3}' \
'{3} = 1 : result | * : results'\
)
staticInspections.caches.resultNotCached=Missing result cache of inspection {0} for plugin {1} (in file {2})
staticInspections.caches.analysisStats=Finished {0} static analyses of plugin {1} (in file {2}) ({3} cached)
staticInspections.timeElapsed=Finished static analysis phase in {0} seconds.
staticInspections.vulnerable=|    Detected unsafe/vulnerable code.
staticInspections.finishSummary=Produced \
'{0} = 0 : no | * : {0}' \
'{0} = 1 : warning | * : warnings' \
in total, \
of which {1} \
'{1} = 1 : is | * : are' \
critical
staticInspections.pluginSummary=|--- There \
'{0} = 1 : is | * : are' \
'{0} = 0 : no | * : {0}' \
'{0} = 1 : warning | * : warnings' \
for plugin {2} (in file {3}), \
of which {1} \
'{1} = 1 : is | * : are' \
critical
staticInspections.pluginResults=|--- Static analysis results for plugin {0} (in file {1}):
logLevel.debug=debug
logLevel.info=info
logLevel.warning=warning
logLevel.error=error
identityFilter.err.skippingInvalidExclusion=Ignoring invalid exclusion
identityFilter.err.invalidSyntax=Syntax error
identityFilter.err.invalidFilterType=Unsupported filter type
staticInspections.proceedAnywayPrompt=Warnings detected! Proceed anyway?
prompts.yes=yes
prompts.no=no
integrityChecker.abortingLine1=Aborting startup: integrity of some plugins has been violated.
integrityChecker.abortingLine2=A more detailed explanation can be found above.
integrityChecker.updated=Saved the new checksum of plugin {0}: {1}
integrityChecker.updatePrompt=|--- Ignore this warning and remember the new checksum of this plugin?
integrityChecker.violationPlugin=|--- Code of plugin {0} has changed since the last startup.
integrityChecker.violationCached=|    Saved checksum: {0}
integrityChecker.violationActual=|    Detected checksum: {0}
runtimeProtect.dac.enabled=Successfully activated Keiko Domain Access Control (DAC).
runtimeProtect.dac.invalidDefCfg=Invalid default DAC configuration for operation {0}: "{1}". \
Falling back to ALLOW rule.
runtimeProtect.dac.ignoringContraRule=Ignoring contradictory DAC rule for operation {0}: "{1}". \
The default rule for this operation is of the same type.
runtimeProtect.dac.ignoringInvalidRule=Ignoring invalid DAC rule for operation {0}: "{1}". \
Syntax error? Details: "{2} ({3})"
runtimeProtect.dac.hostPort=Host: "{0}", port: {1}
runtimeProtect.dac.file=File: "{0}"
runtimeProtect.dac.nativeLib=Library: "{0}", path: "{1}"
runtimeProtect.dac.sysCmd=Command: "{0}"
runtimeProtect.dac.statusCode=Status code: {0}
runtimeProtect.dac.action=Action type: {0}
runtimeProtect.dac.prop=Property: "{0}"
runtimeProtect.dac.vioDetected=Keiko DAC prevented a security violation ({1}). Source: {0}: {2}
runtimeProtect.dac.actionDebug=Keiko DAC registered a {1} call. Source: {0}: {2}

