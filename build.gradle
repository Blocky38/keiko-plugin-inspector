/*
 * Copyright 2021 German Vekhorev (DarksideCode)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'me.darksidecode.keiko'
version '4.0.0'
def buildTimestamp = new Date().format('yyyy/MM/dd_HH-mm-ss')

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

// Include resources
processResources {
    expand project.properties
}

// Fill build.properties
task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/build.properties").withWriter { w ->
            Properties p = new Properties()

            p['version'] = project.version.toString()
            p['timestamp'] = buildTimestamp.toString()

            p.store w, null
        }
    }
}

classes.dependsOn createProperties

// Relocate all our internal libraries to avoid linkage errors when proxying other executables at runtime.
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = 'keiko_internals'
}

// Include MANIFEST.MF
shadowJar {
    manifest {
        attributes 'Main-Class': 'me.darksidecode.keiko.proxy.Keiko'
    }
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

// Dependencies
repositories {
    mavenCentral()

    maven {
        name 'Public Reflex Repository'
        url 'https://archiva.reflex.rip/repository/public/'
    }

    maven {
        name 'BungeeCord'
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }

    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
}

def asmVersion = '9.1'
def lombokVersion = '1.18.6'

dependencies {
    // Embed in JAR (required)
    implementation group: 'me.darksidecode.kantanj', name: 'kantanj', version: '1.0.2'
    implementation group: 'me.darksidecode.jminima', name: 'jminima', version: '1.2.0'
    implementation group: 'org.ow2.asm', name: 'asm', version: "${asmVersion}"
    implementation group: 'org.ow2.asm', name: 'asm-util', version: "${asmVersion}"
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.10'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.28'

    // Present at runtime (optional)
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.13.2-R0.1-SNAPSHOT'
    compileOnly group: 'net.md-5', name: 'bungeecord-api', version: '1.13-SNAPSHOT'

    // Annotation processors
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
}
