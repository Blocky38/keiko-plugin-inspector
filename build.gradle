/*
 * Copyright 2020 DarksideCode
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'me.darksidecode.keiko'
version '4.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()

    maven {
        name 'Public Reflex Repository'
        url 'https://archiva.reflex.rip/repository/public/'
    }

    maven {
        name 'BungeeCord'
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }

    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
}

def asmVersion = '9.1'
def lombokVersion = '1.18.6'

dependencies {
    // Embed in JAR
    implementation group: 'me.darksidecode.kantanj', name: 'kantanj', version: '1.0.0'
    implementation group: 'org.ow2.asm', name: 'asm', version: "${asmVersion}"
    implementation group: 'org.ow2.asm', name: 'asm-util', version: "${asmVersion}"
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.10'
    // We have to implementation Spigot API too at least because of its wide YamlConfiguration API usage
    // (that API is not available in BungeeCord). TODO: a better solution? Because this way the final JAR is so large...
    implementation group: 'org.spigotmc', name: 'spigot-api', version: '1.13.2-R0.1-SNAPSHOT'

    // Present at runtime
    compileOnly group: 'net.md-5', name: 'bungeecord-api', version: '1.13-SNAPSHOT'

    // Annotation processors
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
}

// Include resources
processResources {
    expand project.properties
}

shadowJar {
    // Keiko uses Apache Commons to work with its files. Since the library is
    // very widespread, it might happen that it is also present in some other
    // plugins installed on the server, which may sometimes lead to Keiko trying
    // to use other plugin's Commons, thus failing its own Self-Defense checks.
    // Just relocate our Commons to avoid that.
    relocate 'org.apache.commons', 'keiko.org.apache.commons'
    configurations = [project.configurations.runtimeClasspath]

    // Build MANIFEST
    manifest {
        attributes 'Main-Class': 'me.darksidecode.keiko.tools.KeikoTools'
    }
}
